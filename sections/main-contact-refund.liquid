{% style %}
  .sm-salomon__input.sm-salomon__input--list-of-products .sm-salomon__list-of-checkbox input[type='checkbox']:before {
    background: url({{'Frame_1000005015_1.svg'|file_url}}) no-repeat;
    background-size: contain;
  }

  .sm-salomon__input.sm-salomon__input--list-of-products
    .sm-salomon__list-of-checkbox--checked
    input[type='checkbox']:before {
    background: url({{'Frame_1000005015.svg'|file_url}}) no-repeat;
    background-size: contain;
    display: none;
  }
{% endstyle %}

{{ 'section-main-contact-refund.css' | asset_url | stylesheet_tag: preload: true }}

<div class="central py-medium sm-salomon__contact-wrapper page-width" data-cc-animate data-cc-animate-delay="0.2s">
  {% if section.settings.show_title %}
    <h1 class="feature-header">{{ page.title }}</h1>
  {% endif %}

  <div class="sm-salomon__textWrapper">
    {% for block in section.blocks %}
      <div class="sm-salomon__text">
        {{ block.settings.text }}
      </div>
    {% endfor %}
  </div>

  {%- assign page_url = content_for_header
    | split: '"pageurl":"'
    | last
    | split: '"'
    | first
    | split: request.host
    | last
    | replace: '\/', '/'
    | replace: '%20', ' '
    | replace: '\u0026', '&'
  -%}

  {% liquid
    assign order_id = ''
    assign refund_line_item_id = ''

    if page_url contains '?'
      assign query_string = page_url | split: '?' | last
      assign qry_parts = query_string | split: '&'

      for part in qry_parts
        assign key_and_value = part | split: '='
        if key_and_value.size > 1
          if key_and_value[0] == 'order_id'
            assign order_id = key_and_value[1]
          elsif key_and_value[0] == 'refund_line_item_id'
            assign refund_line_item_id = key_and_value[1]
          endif
        endif
      endfor
    endif

    assign order_id = order_id | plus: 0
  %}

  {% form 'contact' %}
    {% if form.posted_successfully? %}
      <div class="rte align-center sm-salomon__success-message">
        {{ 'contact.form.post_success' | t }}
      </div>

    {% else %}
      {% if form.errors %}
        <div class="errors">
          <p>{{ 'contact.form.post_error' | t }}</p>
          {% assign message_label = 'contact.form.message' | t %}
          <ul>
            {% for field in form.errors %}
              <li>{{ field | replace: 'body', message_label | capitalize }} - {{ form.errors.messages[field] }}</li>
            {% endfor %}
          </ul>
        </div>
      {% endif %}
      <div class="form">
        <div class="input-row">
          <div class="sm-salomon__label">
            <label class="sm-salomon__contact-label">이름*</label>
          </div>
          <div class="sm-salomon__input">
            <input
              aria-label="이름"
              placeholder="이름"
              type="text"
              class="required sm-salomon__contact-last-name"
              id="contact_name"
              {% if customer %}
                value="{{ customer.name }}"
              {% endif %}
              required
              name="contact[name]"
            >
          </div>
        </div>
        <div class="input-row">
          <div class="sm-salomon__label">
            <label class="sm-salomon__contact-label">휴대폰번호</label>
          </div>
          <div class="sm-salomon__input">
            <input
              aria-label="phone"
              placeholder="휴대폰번호"
              type="tel"
              id="contact_phone"
              data-customer-phone
              maxlength="20"
              {% if customer %}
                value="{{ customer.phone }}"
              {% endif %}
              class="email required sm-salomon__contact-phone"
              name="contact[phone]"
            >

            <label
              class="sm-salomon__contact-label hidden"
              data-error-phone-incorrect
            >
              휴대폰 번호를 다시 확인해 주세요.
            </label>
          </div>
        </div>
        <div class="input-row">
          <div class="sm-salomon__label">
            <label class="sm-salomon__contact-label">E-mail*</label>
          </div>
          <div class="sm-salomon__input">
            <input
              aria-label="이메일"
              placeholder="이메일 주소"
              type="email"
              id="contact_email"
              required
              {% if customer %}
                value="{{ customer.email }}"
              {% endif %}
              class="email required sm-salomon__contact-email"
              name="contact[email]"
            >
          </div>
        </div>
        <div class="input-row input-row--productCode">
          <div class="sm-salomon__label">
            <label class="sm-salomon__contact-label">제목*</label>
          </div>
          <div class="sm-salomon__input">
            <input
              aria-label="Title"
              placeholder="문의하실 내용의 제목을 적어주세요."
              type="text"
              id="contact_title"
              class="required email sm-salomon__contact-title"
              name="contact[Order Code]"
              {% if customer %}
                value="{% for order in customer.orders %}{% assign current_order_id = order.id | plus: 0 %}{% if current_order_id == order_id %}{{ order.name }} 주문 반품신청{% endif %}{% endfor %}"
                readonly
              {% endif %}
            >
          </div>
        </div>

        {% liquid
          assign total_items_count = 0
          assign refund_items_count = 0

          if customer
            for order in customer.orders
              assign current_order_id = order.id | plus: 0

              if current_order_id == order_id
                assign total_items_count = order.line_items.size
                for line_item in order.line_items
                  if refund_line_item_id contains line_item.id
                    assign refund_items_count = refund_items_count | plus: 1
                  endif
                endfor
              endif
            endfor
          endif
        %}

        {% if customer %}
          <div class="input-row input-row--productCode input-row--productOrder">
            <div class="sm-salomon__label">
              <label class="sm-salomon__contact-label">반품상품*</label>
            </div>
            <div class="sm-salomon__input sm-salomon__input--list-of-products">
              {% for order in customer.orders %}
                {% assign current_order_id = order.id | plus: 0 %}
                {% if current_order_id == order_id %}
                  {% for line_item in order.line_items %}
                    <div
                      class="sm-salomon__list-of-checkbox{% if refund_line_item_id contains line_item.id %} sm-salomon__list-of-checkbox--checked{% endif %}"
                      data-list-of-checkboxes
                    >
                      <input
                        type="checkbox"
                        name="contact[{{ line_item.product.title | downcase | handleize }}-{{ line_item.variant.id }}]"
                        id="{{ line_item.variant.id }}"
                        name="{{ line_item.product.id }}"
                        value="{{ line_item.title }} x 1"
                        data-line-item-id="{{ line_item.id }}"
                        data-checkbox="true"
                        {% if refund_line_item_id contains line_item.id %}
                          checked
                        {% endif %}
                      >
                      <div class="sm-salomon__checkbox-col">
                        <div class="sm-salomon__image-left-col">
                          {% if line_item.product.featured_image %}
                            <img
                              src="{{ line_item.product.featured_image.src | img_url: 'medium' }}"
                              alt="{{ line_item.title }}"
                              width="auto"
                              height="auto"
                              loading="lazy"
                            >
                          {% endif %}
                        </div>
                        <div class="sm-salomon__content-right-col">
                          <label for="{{ line_item.variant.id }}">
                            <div class="sm-salomon__list-of-products" for="{{ line_item.product.id }}">
                              <h2 class="sm-salomon__order-details-title">
                                {{ line_item.product.title }}
                              </h2>
                              <h5 class="sm-salomon__order-details-variant">
                                {{ line_item.variant.title }}
                              </h5>
                            </div>
                          </label>
                          <div class="sm-salomon__order-quantity" data-order-quantity-container="" hidden="true">
                            <select id="quantity-select" data-order-quantity-select="">
                              {% for i in (1..line_item.quantity) %}
                                <option value="{{ i }}">{{ i }}</option>
                              {% endfor %}
                            </select>
                          </div>
                        </div>
                      </div>
                    </div>
                  {% endfor %}
                {% endif %}
              {% endfor %}
            </div>
          </div>
        {% endif %}

        <div class="input-row input-row--refundCount">
          <div class="sm-salomon__label">
            <label class="sm-salomon__contact-label">Refunding*</label>
          </div>
          <div class="sm-salomon__input">
            <input
              aria-label="Refunding"
              type="text"
              id="refund_items_count"
              class="required sm-salomon__refund-products"
              name="contact[Refund Items Count]"
              value="{{ refund_items_count }}"
              data-refund-items-count
              readonly
            >
          </div>
        </div>

        <div class="input-row sm-salomon__inquiryWrap">
          <div class="sm-salomon__label">
            <label class="sm-salomon__contact-label">반품사유</label>
          </div>
          <div class="sm-salomon__input">
            <textarea
              aria-label="메시지"
              placeholder="반품 사유를 적어주세요."
              id="message"
              data-message
              class="required sm-salomon__inquiryDetails"
              name="contact[Inquirydetails]"
            ></textarea>

            <label
              class="sm-salomon__contact-label hidden"
              data-error-message-empty=""
            >
              올바른 메시지를 입력하세요.
            </label>
          </div>
        </div>
        <div class="wide-action">
          <input type="submit" class="sm-salomon__contactButton" value="반품 신청하기">
        </div>
      </div>
    {% endif %}
  {% endform %}
</div>

<script>
  function formatPhoneNumber(number) {
    number = number.trim();
    return `${number.slice(0, 3)}-${number.slice(3, 7)}-${number.slice(7, 11)}`;
  }

  document.addEventListener('DOMContentLoaded', function () {
    const customerMessage = document.querySelector('[data-message]');
    const customerPhone = document.querySelector('[data-customer-phone]');
    const errorPhoneIncorrect = document.querySelector('[data-error-phone-incorrect]');
    const errorMessageEmpty = document.querySelector('[data-error-message-empty]');

    // Hide error messages when the phone number is being changed
    customerPhone.addEventListener('input', () => {
      if (!errorPhoneIncorrect.classList.contains('hidden')) {
        errorPhoneIncorrect.classList.add('hidden');
      }
    });

    // Hide error messages when the message is being changed
    customerMessage.addEventListener('input', () => {
      if (!errorMessageEmpty.classList.contains('hidden')) {
        errorMessageEmpty.classList.add('hidden');
      }
    });

    document.getElementById('contact_form').addEventListener('submit', (e) => {
      e.preventDefault(); // Prevent form submission by default

      const number = customerPhone.value.trim();
      const message = customerMessage.value.trim();

      // Check if the phone number contains only numbers
      const isNumeric = /^\d+$/.test(number);
      let valid = true; // Use this to track overall form validity

      // Validate phone number
      if (number.length !== 11 || !isNumeric) {
        console.error('Unexpected phone number length or non-numeric characters', number.length, number);
        errorPhoneIncorrect.classList.remove('hidden');
        valid = false; // Mark form as invalid if phone number fails validation
      } else {
        // Format the phone number if valid
        customerPhone.value = formatPhoneNumber(number);
        errorPhoneIncorrect.classList.add('hidden');
      }

      // Validate customer message (ensure it's not empty)
      if (message.length === 0) {
        console.error('Message cannot be empty');
        errorMessageEmpty.classList.remove('hidden');
        valid = false; // Mark form as invalid if message is empty
      } else {
        errorMessageEmpty.classList.add('hidden');
      }

      // If everything is valid, proceed with form submission or other actions
      if (valid) {
        // Submit the form if all fields are valid
        console.info('Form is valid, proceeding with submission...');
      }
    });

    const refundLineItemId = '{{ refund_line_item_id }}';
    const checkboxes = document.querySelectorAll('[data-list-of-checkboxes] [data-checkbox]');
    const refundItemsInput = document.querySelector('[data-refund-items-count]');

    let initialRefundCount = parseInt(refundItemsInput.value, 10) || 0;

    function updateRefundCount() {
      let totalQuantity = 0;
      checkboxes.forEach((checkbox) => {
        if (checkbox.checked) {
          const container = checkbox.parentElement;
          const quantitySelect = container.querySelector('[data-order-quantity-select]');
          const quantity = parseInt(quantitySelect.value, 10) || 0;
          totalQuantity += quantity;
          // Update the input value for each checkbox
          const input = container.querySelector('[data-checkbox]');
          const itemDescription = input.value.split(' x ')[0];
          input.value = `${itemDescription} x ${quantity}`;
        }
      });
      refundItemsInput.value = totalQuantity;
    }

    function handleCheckboxChange(checkbox) {
      const mainContainer = checkbox.parentElement;
      const orderQuantityContainer = mainContainer.querySelector('[data-order-quantity-container]');

      if (checkbox.checked) {
        mainContainer.classList.add('as-wilson__list-of-checkbox--checked');
        orderQuantityContainer.removeAttribute('hidden'); // Show the dropdown
      } else {
        mainContainer.classList.remove('as-wilson__list-of-checkbox--checked');
        orderQuantityContainer.setAttribute('hidden', 'true'); // Hide the dropdown
      }

      updateRefundCount();
    }

    checkboxes.forEach((checkbox) => {
      if (checkbox.getAttribute('data-line-item-id') === refundLineItemId) {
        checkbox.checked = true;
      }
      checkbox.addEventListener('change', () => handleCheckboxChange(checkbox));
      handleCheckboxChange(checkbox); // Initial state update
    });

    document.querySelectorAll('[data-order-quantity-container]').forEach((container) => {
      const quantitySelect = container.querySelector('[data-order-quantity-select]');
      if (quantitySelect) {
        quantitySelect.addEventListener('change', () => {
          updateRefundCount();
        });
      }
    });
  });
</script>

{% schema %}
{
  "name": "Contact form Refund",
  "max_blocks": 5,
  "settings": [
    {
      "type": "checkbox",
      "id": "show_title",
      "label": "Show page title",
      "default": true
    }
  ],
  "blocks": [
    {
      "type": "text",
      "name": "Text",
      "settings": [
        {
          "type": "richtext",
          "id": "text",
          "label": "Label"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Contact Form Refund"
    }
  ]
}
{% endschema %}
