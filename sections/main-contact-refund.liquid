{% style %}
  .sm-salomon__input.sm-salomon__input--list-of-products .sm-salomon__list-of-checkbox input[type='checkbox']:before {
    background: url({{'Frame_1000005015_1.svg'|file_url}}) no-repeat;
    background-size: contain;
  }

  .sm-salomon__input.sm-salomon__input--list-of-products
    .sm-salomon__list-of-checkbox--checked
    input[type='checkbox']:before {
    background: url({{'Frame_1000005015.svg'|file_url}}) no-repeat;
    background-size: contain;
    display: none;
  }
{% endstyle %}

{{ 'section-main-contact-refund.css' | asset_url | stylesheet_tag: preload: true }}

<div class="central py-medium sm-salomon__contact-wrapper page-width" data-cc-animate data-cc-animate-delay="0.2s">
  {% if section.settings.show_title %}
    <h1 class="feature-header">{{ page.title }}</h1>
  {% endif %}

  <div class="sm-salomon__textWrapper">
    {% for block in section.blocks %}
      <div class="sm-salomon__text">
        {{ block.settings.text }}
      </div>
    {% endfor %}
  </div>

  {%- assign page_url = content_for_header
    | split: '"pageurl":"'
    | last
    | split: '"'
    | first
    | split: request.host
    | last
    | replace: '\/', '/'
    | replace: '%20', ' '
    | replace: '\u0026', '&'
  -%}

  {% liquid
    assign order_id = ''
    assign refund_line_item_id = ''

    if page_url contains '?'
      assign query_string = page_url | split: '?' | last
      assign qry_parts = query_string | split: '&'

      for part in qry_parts
        assign key_and_value = part | split: '='
        if key_and_value.size > 1
          if key_and_value[0] == 'order_id'
            assign order_id = key_and_value[1]
          elsif key_and_value[0] == 'refund_line_item_id'
            assign refund_line_item_id = key_and_value[1]
          endif
        endif
      endfor
    endif

    assign order_id = order_id | plus: 0
  %}

  {% form 'contact' %}
    {% if form.posted_successfully? %}
      <div class="rte align-center sm-salomon__success-message">
        {{ 'contact.form.post_success' | t }}
      </div>

    {% else %}
      {% if form.errors %}
        <div class="errors">
          <p>{{ 'contact.form.post_error' | t }}</p>
          {% assign message_label = 'contact.form.message' | t %}
          <ul>
            {% for field in form.errors %}
              <li>{{ field | replace: 'body', message_label | capitalize }} - {{ form.errors.messages[field] }}</li>
            {% endfor %}
          </ul>
        </div>
      {% endif %}
      <div class="form">
        <div class="input-row">
          <div class="sm-salomon__label">
            <label class="sm-salomon__contact-label">이름*</label>
          </div>
          <div class="sm-salomon__input">
            <input
              aria-label="이름"
              placeholder="이름"
              type="text"
              class="required sm-salomon__contact-last-name"
              id="contact_name"
              {% if customer %}
                value="{{ customer.name }}"
              {% endif %}
              required
              name="contact[name]"
            >
          </div>
        </div>
        <div class="input-row">
          <div class="sm-salomon__label">
            <label class="sm-salomon__contact-label">휴대폰번호</label>
          </div>
          <div class="sm-salomon__input">
            <input
              aria-label="phone"
              placeholder="휴대폰번호"
              type="tel"
              id="contact_phone"
              data-phoneNumber
              maxlength="20"
              {% if customer %}
                value="{{ customer.phone }}"
              {% endif %}
              class="email required sm-salomon__contact-phone"
              name="contact[phone]"
            >
          </div>
        </div>
        <div class="input-row">
          <div class="sm-salomon__label">
            <label class="sm-salomon__contact-label">E-mail*</label>
          </div>
          <div class="sm-salomon__input">
            <input
              aria-label="이메일"
              placeholder="이메일 주소"
              type="email"
              id="contact_email"
              required
              {% if customer %}
                value="{{ customer.email }}"
              {% endif %}
              class="email required sm-salomon__contact-email"
              name="contact[email]"
            >
          </div>
        </div>
        <div class="input-row input-row--productCode">
          <div class="sm-salomon__label">
            <label class="sm-salomon__contact-label">제목*</label>
          </div>
          <div class="sm-salomon__input">
            <input
              aria-label="Title"
              placeholder="문의하실 내용의 제목을 적어주세요."
              type="text"
              id="contact_title"
              class="required email sm-salomon__contact-title"
              name="contact[Order Code]"
              {% if customer %}
                value="{% for order in customer.orders %}{% assign current_order_id = order.id | plus: 0 %}{% if current_order_id == order_id %}{{ order.name }} 주문 반품신청{% endif %}{% endfor %}"
                readonly
              {% endif %}
            >
          </div>
        </div>

        {% liquid
          assign total_items_count = 0
          assign refund_items_count = 0

          if customer
            for order in customer.orders
              assign current_order_id = order.id | plus: 0

              if current_order_id == order_id
                assign total_items_count = order.line_items.size
                for line_item in order.line_items
                  if refund_line_item_id contains line_item.id
                    assign refund_items_count = refund_items_count | plus: 1
                  endif
                endfor
              endif
            endfor
          endif
        %}

        {% if customer %}
          <div class="input-row input-row--productCode input-row--productOrder">
            <div class="sm-salomon__label">
              <label class="sm-salomon__contact-label">반품상품*</label>
            </div>
            <div class="sm-salomon__input sm-salomon__input--list-of-products">
              {% for order in customer.orders %}
                {% assign current_order_id = order.id | plus: 0 %}
                {% if current_order_id == order_id %}
                  {% for line_item in order.line_items %}
                    <div
                      class="sm-salomon__list-of-checkbox{% if refund_line_item_id contains line_item.id %} sm-salomon__list-of-checkbox--checked{% endif %}"
                      data-list-of-checkboxes
                    >
                      <input
                        type="checkbox"
                        name="contact[{{ line_item.product.title | downcase | handleize }}-{{ line_item.variant.id }}]"
                        id="{{ line_item.variant.id }}"
                        name="{{ line_item.product.id }}"
                        value="{{ line_item.title }}"
                        data-line-item-id="{{ line_item.id }}"
                        data-checkbox="true"
                        {% if refund_line_item_id contains line_item.id %}
                          checked
                        {% endif %}
                      >
                      <div class="sm-salomon__checkbox-col">
                        <div class="sm-salomon__image-left-col">
                          {% if line_item.product.featured_image %}
                            <img
                              src="{{ line_item.product.featured_image.src | img_url: 'medium' }}"
                              alt="{{ line_item.title }}"
                              width="auto"
                              height="auto"
                              loading="lazy"
                            >
                          {% endif %}
                        </div>
                        <div class="sm-salomon__content-right-col">
                          <label for="{{ line_item.variant.id }}">
                            <div class="sm-salomon__list-of-products" for="{{ line_item.product.id }}">
                              <h2 class="sm-salomon__order-details-title">
                                {{ line_item.product.title }}
                              </h2>
                              <h5 class="sm-salomon__order-details-variant">
                                {{ line_item.variant.title }}
                              </h5>
                            </div>
                          </label>
                          <div class="sm-salomon__order-quantity" data-order-quantity-container="">
                            <a href="javascript:void()" class="sm-salomon__order-quantity-btn" data-quantity-minus="">
                              {% render 'icon-left' %}
                            </a>
                            <div data-max-quantity="{{ line_item.quantity }}">0</div>
                            <a href="javascript:void()" class="sm-salomon__order-quantity-btn" data-quantity-plus="">
                              {% render 'icon-right' %}
                            </a>
                          </div>
                        </div>
                      </div>
                    </div>
                  {% endfor %}
                {% endif %}
              {% endfor %}
            </div>
          </div>
        {% endif %}

        <div class="input-row input-row--refundCount">
          <div class="sm-salomon__label">
            <label class="sm-salomon__contact-label">Refunding*</label>
          </div>
          <div class="sm-salomon__input">
            <input
              aria-label="Refunding"
              type="text"
              id="refund_items_count"
              class="required sm-salomon__refund-products"
              name="contact[Refund Items Count]"
              value="{{ refund_items_count }}"
              data-refund-items-count
              readonly
            >
          </div>
        </div>

        <div class="input-row sm-salomon__inquiryWrap">
          <div class="sm-salomon__label">
            <label class="sm-salomon__contact-label">반품사유</label>
          </div>
          <div class="sm-salomon__input">
            <textarea
              aria-label="메시지"
              placeholder="반품 사유를 적어주세요."
              id="message"
              class="required sm-salomon__inquiryDetails"
              name="contact[Inquirydetails]"
            ></textarea>
          </div>
        </div>
        <div class="wide-action">
          <input type="submit" class="sm-salomon__contactButton" value="반품 신청하기">
        </div>
      </div>
    {% endif %}
  {% endform %}
</div>

<script>
document.addEventListener('DOMContentLoaded', function () {
    const phoneNumberInputs = document.querySelectorAll('[data-phoneNumber], [data-orderNumber]');
    phoneNumberInputs.forEach(function (input) {
      input.addEventListener('keypress', function (e) {
        const charCode = e.which ? e.which : e.keyCode;
        if (String.fromCharCode(charCode).match(/[^0-9]/g)) {
          e.preventDefault();
        }
      });
    });

    var alertShown = false;
    document.getElementById('contact_form').addEventListener('submit', function (event) {
      var inputs = document.querySelectorAll('[data-required]');
      var isValid = true;

      inputs.forEach(function (input) {
        if (input.value.trim() === '') {
          isValid = false;
        }
      });

      if (!isValid) {
        if (!alertShown) {
          alertShown = true;
          alert('* 표시된 항목은 필수 기재 항목입니다.');
          event.preventDefault();
        } else {
          alert('* 표시된 항목은 필수 기재 항목입니다.');
          event.preventDefault();
        }
      } else {
        alertShown = false;
      }
    });

    let refund_line_item_id = '{{ refund_line_item_id }}';
    let checkboxes = document.querySelectorAll('[data-list-of-checkboxes] [data-checkbox]');
    let refundItemsInput = document.querySelector('[data-refund-items-count]');

    // Ensure refundItemsInput.value is a valid number
    let initialRefundCount = parseInt(refundItemsInput.value, 10) || 0;

    // Function to update refund count based on checkbox state
    // function updateRefundCount() {
    //   let checkedCount = 0;
    //   checkboxes.forEach(function (checkbox) {
    //     if (checkbox.checked) {
    //       checkedCount++;
    //     }
    //   });
    //   refundItemsInput.value = checkedCount;
    // }

    function updateRefundCount() {
      let totalQuantity = 0;
      checkboxes.forEach(function (checkbox) {
        if (checkbox.checked) {
          // Assuming the data-max-quantity input is within the same parent container as the checkbox
          let container = checkbox.parentElement;
          let maxQuantityInput = container.querySelector('input[data-max-quantity]');
          console.log(maxQuantityInput);

          if (maxQuantityInput) {
            // Parse the value of maxQuantity as an integer
            let maxQuantity = parseInt(maxQuantityInput.value, 10) || 0;
            totalQuantity += maxQuantity;
          }
        }
      });
      // Update the refund items input with the total quantity
      refundItemsInput.value = totalQuantity;
    }

    // Update the refund count on initial load
    updateRefundCount();

    // Add event listeners to update count and style when checkboxes change
    checkboxes.forEach(function (checkbox) {
      let lineItemID = checkbox.getAttribute('data-line-item-id');

      // Automatically check the checkbox with the matching refund_line_item_id
      if (lineItemID === refund_line_item_id) {
        checkbox.checked = true;
      }

      // Add or remove class based on checkbox state
      let parentDiv = checkbox.closest('.sm-salomon__list-of-checkbox');
      if (checkbox.checked) {
        parentDiv.classList.add('sm-salomon__list-of-checkbox--checked');
      } else {
        parentDiv.classList.remove('sm-salomon__list-of-checkbox--checked');
      }

      // Update refund count on change
      checkbox.addEventListener('change', function () {
        if (this.checked) {
          parentDiv.classList.add('sm-salomon__list-of-checkbox--checked');
        } else {
          parentDiv.classList.remove('sm-salomon__list-of-checkbox--checked');
        }
        updateRefundCount();
      });
    });

    // Select all quantity containers
    const quantityContainers = document.querySelectorAll('[data-order-quantity-container]');

    quantityContainers.forEach((container) => {
      // Select the elements
      const minusBtn = container.querySelector('[data-quantity-minus]');
      const plusBtn = container.querySelector('[data-quantity-plus]');
      const maxQuantityDiv = container.querySelector('[data-max-quantity]');

      // Convert the div's initial text content to a number
      let currentValue = parseInt(maxQuantityDiv.textContent, 10) || 0;
      let maxQuantity = parseInt(maxQuantityDiv.getAttribute('data-max-quantity'), 10) || 0;

      // Function to update the button states
      function updateButtonStates() {
        // Disable/enable the minus button
        if (currentValue <= 1) {
          minusBtn.classList.add('sm-salomon__order-quantity-btn--disabled');
        } else {
          minusBtn.classList.remove('sm-salomon__order-quantity-btn--disabled');
        }

        // Disable/enable the plus button
        if (currentValue >= maxQuantity) {
          plusBtn.classList.add('sm-salomon__order-quantity-btn--disabled');
        } else {
          plusBtn.classList.remove('sm-salomon__order-quantity-btn--disabled');
        }
      }

      // Initial button state update
      updateButtonStates();

      // Handle the "-" button click
      minusBtn.addEventListener('click', function (e) {
        e.preventDefault();
        if (currentValue > 1) {
          currentValue -= 1;
          maxQuantityDiv.textContent = currentValue;
          updateButtonStates();
          updateRefundCount();
        }
      });

      // Handle the "+" button click
      plusBtn.addEventListener('click', function (e) {
        e.preventDefault();
        if (currentValue < maxQuantity) {
          currentValue += 1;
          maxQuantityDiv.textContent = currentValue;
          updateButtonStates();
          updateRefundCount();
        }
      });
    });
  });
</script>

{% schema %}
{
  "name": "Contact form Refund",
  "max_blocks": 5,
  "settings": [
    {
      "type": "checkbox",
      "id": "show_title",
      "label": "Show page title",
      "default": true
    }
  ],
  "blocks": [
    {
      "type": "text",
      "name": "Text",
      "settings": [
        {
          "type": "richtext",
          "id": "text",
          "label": "Label"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Contact Form Refund"
    }
  ]
}
{% endschema %}
